This .txt contains some text inputs to check whether our functions work as planned.
Add the following block of input in the Board() constructor contained in the Board.java file.
1) Test to see if the AI prioritises the corner over anything else.
		
		this.board[0][3] = Piece.WHITE;
		this.board[0][1] = Piece.BLACK;
		this.board[0][2] = Piece.BLACK;
		this.board[0][7] = Piece.BLACK;
		this.board[0][4] = Piece.BLACK;
		this.board[0][6] = Piece.BLACK;
		this.board[7][0] = Piece.BLACK;
		this.board[7][7] = Piece.BLACK;
		this.board[6][7] = Piece.BLACK;
		this.board[7][6] = Piece.BLACK;
		this.board[7][5] = Piece.BLACK;

2) Input test to check if stability() is working correctly. 

		this.board[0][0] = Piece.BLACK;
		this.board[0][1] = Piece.BLACK;
		this.board[0][2] = Piece.BLACK;
		this.board[0][7] = Piece.BLACK;
		this.board[0][4] = Piece.BLACK;
		this.board[0][6] = Piece.BLACK;
		this.board[7][0] = Piece.BLACK;
		this.board[7][7] = Piece.BLACK;
		this.board[6][7] = Piece.BLACK;
		this.board[7][6] = Piece.BLACK;
		this.board[7][5] = Piece.BLACK;

3) No eligible moves for players. Double skipping and end of game included.
a. Case 1
		this.board[0][0] = Piece.BLACK;
		this.board[0][2] = Piece.BLACK;
		this.board[0][3] = Piece.WHITE;
		this.board[0][7] = Piece.BLACK;
		this.board[0][4] = Piece.BLACK;
		this.board[0][6] = Piece.BLACK;
		this.board[7][0] = Piece.BLACK;
		this.board[7][7] = Piece.BLACK;
		this.board[6][7] = Piece.BLACK;
		this.board[7][6] = Piece.BLACK;
		this.board[7][5] = Piece.BLACK;

b. Case 2
		this.board[0][0] = Piece.BLACK;
		this.board[0][1] = Piece.BLACK;
		this.board[0][2] = Piece.WHITE;
		this.board[0][7] = Piece.BLACK;
		this.board[0][5] = Piece.WHITE;
		this.board[0][6] = Piece.BLACK;
		this.board[7][0] = Piece.BLACK;
		this.board[7][7] = Piece.BLACK;
		this.board[6][7] = Piece.BLACK;
		this.board[7][6] = Piece.BLACK;
		this.board[7][5] = Piece.BLACK;


